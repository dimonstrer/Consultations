@model IEnumerable<Patient>
@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    @if (ViewBag.Message != string.Empty)
    {
    <h4 class="text-success">@ViewBag.Message</h4>
    }
    <h1 class="display-4">Список пациентов</h1>
    <input type="button" class="btn btn-success my-3" onclick="addHandler()" value="Добавить" />
    <input type="text" class="form-control" id="search" placeholder="Введите ФИО или СНИЛС" onkeydown="updateItems()" />
    <table class="table table-striped">
        <thead>
            <tr>
                <th width="50%">ФИО</th>
                <th width="10%">Пол</th>
                <th width="15%">Дата рождения</th>
                <th width="15%">СНИЛС</th>
                <th width="10%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (Patient p in Model)
            {
                <tr>
                    <td>
                        @Html.ActionLink(@String.Format(p.LastName + " " + @p.FirstName + " " + @p.Patronymic),
                            "Get", "Patient", new { id = p.PatientId })
                    </td>
                    <td>@p.Gender[0]</td>
                    <td>@p.BirthDate.ToString("d MMM yyyy")</td>
                    <td>@p.PensionNumber</td>
                    <td>
                        <a href="@Url.Action("Edit","Patient", new { id = p.PatientId })" style="text-decoration:none"
                           title="Редактировать">
                            <svg class="bi bi-pencil text-success" width="30" height="30" viewBox="0 0 20 20" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M13.293 3.293a1 1 0 011.414 0l2 2a1 1 0 010 1.414l-9 9a1 1 0 01-.39.242l-3 1a1 1 0 01-1.266-1.265l1-3a1 1 0 01.242-.391l9-9zM14 4l2 2-9 9-3 1 1-3 9-9z" clip-rule="evenodd" />
                                <path fill-rule="evenodd" d="M14.146 8.354l-2.5-2.5.708-.708 2.5 2.5-.708.708zM5 12v.5a.5.5 0 00.5.5H6v.5a.5.5 0 00.5.5H7v.5a.5.5 0 00.5.5H8v-1.5a.5.5 0 00-.5-.5H7v-.5a.5.5 0 00-.5-.5H5z" clip-rule="evenodd" />
                            </svg>
                        </a>
                        <a href="#" style="text-decoration:none" onclick="deleteHandler(@p.PatientId)"
                           title="Удалить">
                            <svg class="bi bi-x-square-fill text-danger" width="30" height="30" viewBox="0 0 20 20" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M4 2a2 2 0 00-2 2v12a2 2 0 002 2h12a2 2 0 002-2V4a2 2 0 00-2-2H4zm3.354 4.646L10 9.293l2.646-2.647a.5.5 0 01.708.708L10.707 10l2.647 2.646a.5.5 0 01-.708.708L10 10.707l-2.646 2.647a.5.5 0 01-.708-.708L9.293 10 6.646 7.354a.5.5 0 11.708-.708z" clip-rule="evenodd" />
                            </svg>
                        </a>
                    </td>
                </tr>
            }
            @if (Model.Count() == 0)
            {
                <tr>
                    <td colspan="5">Пациенты не найдены</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section scripts{
    @*Button handlers*@
    <script>
        function addHandler() {
            location.href = '@Url.Action("Add","Patient")';
        };
        async function deleteHandler(value) {
            if (confirm('Вы действительно хотите удалить пациента?')) {
                let url = '@Url.Action("Delete","Patient")?id=' + value;
                let response = await fetch(url, {
                    method: 'DELETE'
                });
                if (response.ok) {
                    let ans = await response.json();
                    if (ans.success == 'true')
                        location.href = '@Url.Action("Index","Home")' + '?message=' + ans.message;
                    else
                        alert(ans.message);
                }
                else {
                    alert(response.status)
                }
            }
        }
    </script>

    @*Search scripts*@
    <script>
    @*OnKeyDown handler*@
    async function updateItems() {
        if (this.timer) {
        window.clearTimeout(this.timer);
        }
        this.timer = window.setTimeout(getItems, 1000);
    }

    @*Items fetching*@
    async function getItems() {
        let value = document.getElementById('search').value;
        let url = '@Url.Action("List","Patient")';
        let num = value.split('-').join('').split(' ').join('');
        if (!isNaN(num)) {
            url += '?pension=' + num;
        }
        else {
            url += '?name=' + value;
        }
        let response = await fetch(url);
        if (response.ok) {
            let result = await response.text();
            changeItems(result);
        }
        else {
        alert("Ошибка HTTP: " + response.status);
        }
        }
    @*Changing items in table*@
    function changeItems(items) {
        let tableBody = document.getElementsByTagName('tbody')[0];
        tableBody.innerHTML = items;
    }
    </script>
}